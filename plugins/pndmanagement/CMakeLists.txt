PROJECT(pndmanagement)

FIND_PACKAGE(Qt5Quick REQUIRED)
FIND_PACKAGE(Qt5Qml REQUIRED)

SET(CMAKE_AUTOMOC ON)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

FIND_LIBRARY(PND_LIBRARY pnd)
FIND_PATH(PND_INCLUDE pnd_pxml.h)
if (NOT PND_LIBRARY OR NOT PND_INCLUDE)
    set(PND_LIBRARY pnd)
    list(APPEND PNDMANAGEMENT_INCL ${PND_BINARY_DIR}/include)
else ()
    list(APPEND PNDMANAGEMENT_INCL ${PND_INCLUDE})
endif ()
list(APPEND PNDMANAGEMENT_LINK ${PND_LIBRARY})

FIND_LIBRARY(QTPNDMAN_LIBRARY qtpndman)
FIND_PATH(QTPNDMAN_INCLUDE qtpndman.h)
if (NOT QTPNDMAN_LIBRARY OR NOT QTPNDMAN_INCLUDE)
    set(QTPNDMAN_LIBRARY qtpndman)
    list(APPEND PNDMANAGEMENT_INCL ${qtpndman_SOURCE_DIR}/include)
else ()
    list(APPEND PNDMANAGEMENT_INCL ${QTPNDMAN_INCLUDE})
endif ()
list(APPEND PNDMANAGEMENT_LINK ${QTPNDMAN_LIBRARY} ${QTPNDMAN_LIBRARIES})

FIND_LIBRARY(LIBPNDMAN_LIBRARY libpndman)
FIND_PATH(LIBPNDMAN_INCLUDE pndman.h)
if (NOT LIBPNDMAN_LIBRARY OR NOT LIBPNDMAN_INCLUDE)
    list(APPEND PNDMANAGEMENT_INCL ${libpndman_SOURCE_DIR}/include)
else ()
    list(APPEND PNDMANAGEMENT_INCL ${LIBPNDMAN_INCLUDE})
endif ()

file(GLOB_RECURSE pndmanagement_SOURCES src/*.cpp)
file(GLOB_RECURSE pndmanagement_HEADERS src/*.h)
INCLUDE_DIRECTORIES(${PNDMANAGEMENT_INCL})

ADD_LIBRARY(pndmanagement MODULE ${pndmanagement_SOURCES})
TARGET_LINK_LIBRARIES(pndmanagement ${PNDMANAGEMENT_LINK})
qt5_use_modules(pndmanagement Quick Qml)

INSTALL(TARGETS pndmanagement DESTINATION ${PLUGINDIR}/Panorama/PNDManagement)

